// Vertical Scaling

1) db.<collectionname>.drop()  //  to delete the collection.

2) show collections  //  to show all collections.

3) use apple  // switch db (use <db name>)

4) show dbs // show all db.

EX: Atlas atlas-84ix2f-shard-0 [primary] apple> show dbs
sample_mflix  110.91 MiB
admin         340.00 KiB
local          18.16 GiB  

6) db.<collectionname>.find() // show all datas in collection.

7) db.user.find({gender:"Male"})  // it shows all Male data in user collection.

8)  db.user.find({age:28,city:"Hyderabad"}) // it show specific data according to condition.

9) operators( $or, $and, $nin, $ne $exits, $lt, $in, $gt, $eq, $lte,$gte etc ).
10) db.user.find({role:"customer",lastName:/karamchandani/}).count() , //  / is used to check character 

11)  db.user.find({role:"customer",username:/^A/}).count()  // it shows all name start from A.

12) db.user.find({username:/ar/}) // it shows all data with ar name in between.

13) db.user.find({username:/^R/}) // it shows first word R.

14) db.user.find({skills:"Python",skills:"Java"}) // If key is same then or otherwise and.  

15)  db.user.find({$and:[{skills:"Python"},{skills:"Java"}]})

16)  db.user.find({skills:{$all:["Python","Java"]}}) // this is by $all  

17) db.user.find({skills:"Java",skills:{$nin:["Spring","Hybernate"]}})  // it shows java without spring and hibernate and also some data without spring and hybernate.

18)  db.user.find({skills:{$in:["Java"],$nin:["Spring","Hybernate"]}}) // it shows java without spring and hibernate

19)  db.user.find({username:/a$/})  // it shows data with username ends withs a

20) db.user.find({"skills.3":{$exists:true}}) // it shows only atleast 3 skills.
21) db.user.find({"skills.3":{$exists:false}})  // it shows atmost 3 skills.

22) db.user.find({useremail:{$not:/yahoo.com$/}})  // it shows all emails but not shows with yahoo.com

23)  db.user.find({role:"admin","skills.0":{$exists:true}})  // it shows all data with role is admin and atleast has one skill.

24)  db.user.find({role:"admin",useremail:/regexsoftware.com/})  // it shows all data contains regexsoftware.com email.

// Horizontal scaling.
// operation pipeline
-> $match,$group,$unwind,$project    

db.user.aggregate([])

1) 

[
  {
    $match: {
      salary:{$gte:50000,$lte:500000}
    }
  }
]

2) 

[
  {
    $match: {
     gender:"Female",
      city:"Goa",
      age:{$gte:24},
      skills:{$all:["Python","C++"]}
    }
  }
]
3)

[
  {
    $match: {
    
      city:{$in:["New Delhi","Mumbai"]}
     
    }
  }
]

4) 

[
  {
    $match: {
      city: "New Delhi"
    }
  },
  {
  $count:"total user from delhi",
  }
    ]
 // it count users ex. 
  "total user from delhi": 3
   5)

[
  {
    $group:{
      _id:"$city",
      maxSal:{$max:"$salary"},
      avgSal:{$avg:"$salary"},
      minSal:{$min:"$salary"}
    }
  }
    ]

6)

[
  {
    $group:{
      _id:"$gender",
      
      avgAge:{$avg:"$age"},
     
    }
  }
    ]
7)

[
  {
    $group:{
      _id:["$gender","$city"],
      
      
     
    }
  }
    ]

8)

[
  {
    $group:{
      // _id:["$gender","$city"],
      // totalSal:{$sum:"$salary"}
      // maxSal:{$max:"$salary"}
      
      
     
    }
  }
    ]
9)

[
  {
    
     $unwind:"$skills"
  },
  {
    $group:{
      _id:"$skills",
      totalusers:{$sum:1}
    }
  }
  
    ]
// it break the skills and then group them and also find total users bcoz skills can't group directly bcoz it is in array format.   

10)

[
  {
    
     $unwind:"$skills"
  },
  {
    $group:{
      _id:"$skills",
      totalusers:{$sum:1}
       }
  },
  {
    $project:{
      skills:"$_id",
      totalusers:1
    }
 
  },
  {
    $match:{
      totalusers:{$gte:2}
    }
  }
]

11)

[
  {
    
     $unwind:"$skills"
  },
   {
    $group:{
      _id:"$skills",
      totalusers:{$sum:1},
      // avgUser:{$avg:"$skills"}
    
    }
  },
  {
    $project:{
      skills:"$_id",
      totalusers:1
    }
 
  },
  {
    $group{
    _id:"$skills",
        avgUser:{$avg}
  }
  },
  {
    $match:{
      totalusers:{$gte:2},
    }
  }
]
12)

[
  {
    $addFields: {
      skillSize:{$size:"$skills"}
    }
  }
]

// here each user skill count.

13)

 {
    $sort: {
      usercount: -1
    }
  },
  {
    $limit: 5
  }
  
  14)

  [
  {
    $unwind:"$skills"
 },
  
  {
    $group: {
      _id:"$skills",
      user:{$push:"$username"}
    }
    }
  ]
